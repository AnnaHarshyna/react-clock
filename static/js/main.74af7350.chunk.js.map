{"version":3,"sources":["components/Clock.jsx","App.js","reportWebVitals.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerBreakPoint","setInterval","setState","console","log","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","setRandomName","Math","floor","random","changeClockVisbility","prevState","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,gBAAkBC,aAAY,WACjC,EAAKC,SAAS,CACZN,MAAM,IAAIC,MAAOC,uBAGnBK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAUC,OAASA,GAErBH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DA,MApBrE,kCAwBE,WACEE,cAAcT,KAAKC,mBAzBvB,oBA4BE,WACE,IAAQJ,EAASG,KAAKJ,MAAdC,KAER,OACE,+CAAkBA,SAhCxB,GAA2Ba,IAAMC,WCmDlBC,E,4MAhDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,EAAKZ,SAAS,CACZW,UAAWE,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAI/BC,qBAAuB,WACrB,EAAKhB,UAAS,SAAAiB,GAAS,MAAK,CAC1BP,gBAAiBO,EAAUP,oB,4CAI/B,WACE,MAAsCb,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,qCACE,6CACCD,GAAkB,cAAC,EAAD,CAAON,KAAMO,IAEhC,qCACE,wBACEO,KAAK,SACLC,QAAStB,KAAKmB,qBAFhB,SAIGnB,KAAKJ,MAAMiB,eACR,aACA,eAIN,wBACEQ,KAAK,SACLC,QAAStB,KAAKe,cAFhB,uC,GArCQL,IAAMC,WCQTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74af7350.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerBreakPoint = setInterval(() => {\n      this.setState({\n        time: new Date().toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerBreakPoint);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p>Current time: {time}</p>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 1000),\n    });\n  }\n\n  changeClockVisbility = () => {\n    this.setState(prevState => ({\n      isClockVisible: !prevState.isClockVisible,\n    }));\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <>\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n\n        <>\n          <button\n            type=\"button\"\n            onClick={this.changeClockVisbility}\n          >\n            {this.state.isClockVisible\n              ? 'Hide Clock'\n              : 'Show Clock'\n            }\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.setRandomName}\n          >\n            Set random name\n          </button>\n        </>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}